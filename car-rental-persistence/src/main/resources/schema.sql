DROP DATABASE IF EXISTS CAR_RENTAL;

CREATE DATABASE CAR_RENTAL;
USE CAR_RENTAL;

DROP TABLE IF EXISTS CAR_RENTAL.USER_ROLE;
CREATE TABLE CAR_RENTAL.USER_ROLE
(
    ID   INT AUTO_INCREMENT PRIMARY KEY,
    ROLE VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX IDX_UN_USER_ROLE_ROLE ON CAR_RENTAL.USER_ROLE (ROLE);

DROP TABLE IF EXISTS CAR_RENTAL.DISCOUNT_STATUS;
CREATE TABLE CAR_RENTAL.DISCOUNT_STATUS
(
    ID       INT AUTO_INCREMENT PRIMARY KEY,
    STATUS   VARCHAR(10) NOT NULL,
    DISCOUNT DOUBLE      NOT NULL DEFAULT 0,
    CONSTRAINT CHECK_STATUS_DISCOUNT CHECK (DISCOUNT BETWEEN 0.0 AND 100.0)
);

DROP TABLE IF EXISTS CAR_RENTAL.USER_DETAILS;
CREATE TABLE CAR_RENTAL.USER_DETAILS
(
    ID                INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME        VARCHAR(30) NOT NULL,
    LAST_NAME         VARCHAR(30) NOT NULL,
    PASSPORT_DATA     VARCHAR(30) NOT NULL,
    TOTAL_RENTAL_TIME INT         NOT NULL DEFAULT 0,
    STATUS_ID         INT         NOT NULL DEFAULT 1,
    CONSTRAINT FK_CLIENT_DATA_STATUS FOREIGN KEY (STATUS_ID) REFERENCES CAR_RENTAL.DISCOUNT_STATUS (ID)
);

CREATE INDEX IDX_CLIENT_DATA_NAME ON CAR_RENTAL.USER_DETAILS (FIRST_NAME, LAST_NAME);
CREATE INDEX IDX_CLIENT_DATA_STATUS_ID ON CAR_RENTAL.USER_DETAILS (STATUS_ID);

DROP TABLE IF EXISTS CAR_RENTAL.USER;
CREATE TABLE CAR_RENTAL.USER
(
    ID              INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME        VARCHAR(50)  NOT NULL,
    PASSWORD        VARCHAR(100) NOT NULL,
    EMAIL           VARCHAR(100) NOT NULL,
    ENABLED         TINYINT      NOT NULL DEFAULT 1,
    LASTLOGIN       TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
    USER_DETAILS_ID INT          NOT NULL,
    CONSTRAINT FK_USER_USER_DETAILS FOREIGN KEY (USER_DETAILS_ID) REFERENCES CAR_RENTAL.USER_DETAILS (ID)
);

CREATE UNIQUE INDEX IDX_UN_USER_EMAIL ON CAR_RENTAL.USER (EMAIL);
CREATE UNIQUE INDEX IDX_UN_USER_USER_NAME ON CAR_RENTAL.USER (USERNAME);
CREATE UNIQUE INDEX IDX_UN_USER_USER_DETAILS_ID ON CAR_RENTAL.USER (USER_DETAILS_ID);

DROP TABLE IF EXISTS CAR_RENTAL.AUTHORITY;
CREATE TABLE CAR_RENTAL.AUTHORITY
(
    USERNAME VARCHAR(50) NOT NULL,
    ROLE_ID  INT         NOT NULL,
    CONSTRAINT FK_AUTHORITY_USER FOREIGN KEY (USERNAME) REFERENCES CAR_RENTAL.USER (USERNAME),
    CONSTRAINT FK_AUTHORITY_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES CAR_RENTAL.USER_ROLE (ID)
);

CREATE UNIQUE INDEX IDX_UN_AUTHORITY ON CAR_RENTAL.AUTHORITY (USERNAME, ROLE_ID);

DROP TABLE IF EXISTS CAR_RENTAL.CAR_MODEL;
CREATE TABLE CAR_RENTAL.CAR_MODEL
(
    ID             INT AUTO_INCREMENT PRIMARY KEY,
    BRAND_NAME     VARCHAR(100) NOT NULL,
    MODEL          VARCHAR(100) NOT NULL,
    BODY_TYPE      VARCHAR(30)  NOT NULL,
    FUEL_TYPE      VARCHAR(30)  NOT NULL,
    ENGINE_VOLUME  FLOAT(10)    NOT NULL,
    TRANSMISSION   VARCHAR(30)  NOT NULL,
    BODY_COLOR     VARCHAR(100) NOT NULL,
    INTERIOR_COLOR VARCHAR(100) NOT NULL
);

CREATE INDEX IDX_CAR_1 ON CAR_RENTAL.CAR_MODEL (BRAND_NAME, MODEL, BODY_TYPE, TRANSMISSION);

DROP TABLE IF EXISTS CAR_RENTAL.CAR_STATUS;
CREATE TABLE CAR_RENTAL.CAR_STATUS
(
    ID     INT AUTO_INCREMENT PRIMARY KEY,
    STATUS VARCHAR(10) NOT NULL
);

DROP TABLE IF EXISTS CAR_RENTAL.CAR;
CREATE TABLE CAR_RENTAL.CAR
(
    ID            INT AUTO_INCREMENT PRIMARY KEY,
    STATE_NUMBER  VARCHAR(10) NOT NULL,
    CAR_MODEL_ID  INT         NOT NULL,
    CAR_STATUS_ID INT         NOT NULL,
    CONSTRAINT FK_CAR_CAR_MODEL FOREIGN KEY (CAR_MODEL_ID) REFERENCES CAR_RENTAL.CAR_MODEL (ID),
    CONSTRAINT FK_CAR_CAR_STATUS FOREIGN KEY (CAR_STATUS_ID) REFERENCES CAR_RENTAL.CAR_STATUS (ID)
);

CREATE INDEX IDX_CAR_STATE_NUMBER ON CAR_RENTAL.CAR (STATE_NUMBER);
CREATE INDEX IDX_CAR_CAR_MODEL_ID ON CAR_RENTAL.CAR (CAR_MODEL_ID);
CREATE INDEX IDX_CAR_CAR_STATUS_ID ON CAR_RENTAL.CAR (CAR_STATUS_ID);

DROP TABLE IF EXISTS CAR_RENTAL.ORDER_STATUS;
CREATE TABLE CAR_RENTAL.ORDER_STATUS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    STATUS      VARCHAR(20)  NOT NULL,
    DESCRIPTION VARCHAR(300) NOT NULL
);

DROP TABLE IF EXISTS CAR_RENTAL.ORDER;
CREATE TABLE CAR_RENTAL.ORDER
(
    ID                  INT AUTO_INCREMENT PRIMARY KEY,
    ORDER_DATE          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    USER_ID             INT       NOT NULL,
    DATE_FROM           TIMESTAMP NOT NULL,
    DATE_TO             TIMESTAMP NOT NULL,
    CAR_MODEL_ID        INT       NOT NULL,
    CAR_ID              INT,
    PRICE_WITH_DISCOUNT INT       NOT NULL,
    DISCOUNT            DOUBLE    NOT NULL DEFAULT 0,
    DECLINE_REASON      VARCHAR(300),
    ORDER_STATUS_ID     INT       NOT NULL DEFAULT 1,
    CONSTRAINT CHECK_ORDER_DISCOUNT CHECK (DISCOUNT BETWEEN 0.0 AND 100.0),
    CONSTRAINT FK_ORDER_CAR_MODEL FOREIGN KEY (CAR_MODEL_ID) REFERENCES CAR_RENTAL.CAR_MODEL (ID),
    CONSTRAINT FK_ORDER_CAR FOREIGN KEY (CAR_ID) REFERENCES CAR_RENTAL.CAR (ID),
    CONSTRAINT FK_ORDER_ORDER_STATUS FOREIGN KEY (ORDER_STATUS_ID) REFERENCES CAR_RENTAL.ORDER_STATUS (ID),
    CONSTRAINT FK_ORDER_USER FOREIGN KEY (USER_ID) REFERENCES CAR_RENTAL.USER (ID)
);

CREATE INDEX IDX_ORDER_CAR_MODEL_ID ON CAR_RENTAL.ORDER (CAR_MODEL_ID);
CREATE INDEX IDX_ORDER_CAR_ID ON CAR_RENTAL.ORDER (CAR_ID);
CREATE INDEX IDX_ORDER_USER_ID ON CAR_RENTAL.ORDER (USER_ID);
CREATE INDEX IDX_ORDER_ORDER_STATUS_ID ON CAR_RENTAL.ORDER (ORDER_STATUS_ID);
CREATE INDEX IDX_ORDER_DATE_STAT ON CAR_RENTAL.ORDER ((DATE(ORDER_DATE)), ORDER_STATUS_ID);
CREATE INDEX IDX_ORDER_DATE_FR_TO ON CAR_RENTAL.ORDER (DATE_FROM, DATE_TO);

DROP TABLE IF EXISTS CAR_RENTAL.REPAIR_INVOICE;
CREATE TABLE CAR_RENTAL.REPAIR_INVOICE
(
    ID           INT AUTO_INCREMENT PRIMARY KEY,
    INVOICE_DATE TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    USER_ID      INT          NOT NULL,
    CAR_ID       INT          NOT NULL,
    DAMAGE_INFO  VARCHAR(300) NOT NULL,
    COST         INT          NOT NULL,
    ADMIN_ID     INT          NOT NULL,
    ADD_INFO     VARCHAR(300),
    IS_PAID      VARCHAR(1)   NOT NULL DEFAULT 'N',
    CONSTRAINT CHECK_REPAIR_INVOICE_IS_PAID CHECK (IS_PAID IN ('Y', 'N')),
    CONSTRAINT FK_REPAIR_INVOICE_CAR FOREIGN KEY (CAR_ID) REFERENCES CAR_RENTAL.CAR_MODEL (ID),
    CONSTRAINT FK_REPAIR_INVOICE_USER_DETAILS_US FOREIGN KEY (USER_ID) REFERENCES CAR_RENTAL.USER (ID),
    CONSTRAINT FK_REPAIR_INVOICE_USER_DETAILS_ADM FOREIGN KEY (ADMIN_ID) REFERENCES CAR_RENTAL.USER (ID)
);

CREATE INDEX IDX_REPAIR_INVOICE_CAR_ID ON CAR_RENTAL.REPAIR_INVOICE (CAR_ID);
CREATE INDEX IDX_REPAIR_INVOICE_USER_ID ON CAR_RENTAL.REPAIR_INVOICE (USER_ID);
CREATE INDEX IDX_REPAIR_INVOICE_ADMIN_ID ON CAR_RENTAL.REPAIR_INVOICE (ADMIN_ID);
CREATE INDEX IDX_REPAIR_INVOICE_DATE_STAT ON CAR_RENTAL.REPAIR_INVOICE ((DATE(INVOICE_DATE)), IS_PAID);
